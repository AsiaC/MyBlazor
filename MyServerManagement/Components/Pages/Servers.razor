@page "/servers"
@rendermode InteractiveServer
@using MyServerManagement.Components.Controls
@inject NavigationManager NavigationManager

<h3>Servers</h3>

<div calss="container-fluid text-center">
    <div class="row w-50">
        @foreach (var city in cities)
        {
            <div class="col">
                <div class="card @(selectedCity.Equals(city, StringComparison.OrdinalIgnoreCase) ? "border-primary" : "")">
                    <img src=@($"/images/{city}.png") class="card-img-top" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-primary" @onclick="@(() => { SelectCity(city); })">@city </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@*  <ServerComponent @rendermode="InteractiveServer"></ServerComponent> *@

<br />
<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Search Servers" 
    @bind-value="serverFilter" 
    @bind-value:event="oninput"/>
    <button class="btn btn-outline-secondary" type="button" id="button-search" 
    @onclick="HandleSearch">Search</button>
</div>
<br />

<ServerListComponent 
    @rendermode="InteractiveServer"
    CityName="@this.selectedCity">
    </ServerListComponent>

<p>
    @* <AddServer /> *@
    <a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>

@code {
   
    private List<String> cities = CitiesRepository.GetCities();
    public string selectedCity = "Toronto";
    private string _serverFilter = string.Empty;
    private string serverFilter
    {
        get => _serverFilter; set
        {
            _serverFilter = value;

            //this.servers = ServersRepository.SearchServers(_serverFilter);
        }
    }

    

    private void SelectCity(string city)
    {
        this.selectedCity = city;
        //this.servers = ServersRepository.GetServersByCity(selectedCity);
    }

    private void HandleSearch()
    {
        if (!string.IsNullOrWhiteSpace(serverFilter))
        {
          //  this.servers = ServersRepository.SearchServers(serverFilter);
            this.selectedCity = string.Empty;
        }
    }
}
