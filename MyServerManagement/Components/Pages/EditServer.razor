@page "/servers/{id:int}"
@inject NavigationManager NavigationManager

<h3>EditServer</h3>
<br />
<br />
@if (server != null)
{
    <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">

        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <InputNumber @bind-Value="server.ServerId" hidden></InputNumber>

        <FieldComponent Label="Name">
            <Control>
                <InputText @bind-Value="server.Name" class="form-control"></InputText>
            </Control>
            <ValidationControl>
                <ValidationMessage For="@(() => server.Name)"></ValidationMessage>
            </ValidationControl>
        </FieldComponent>

        <FieldComponent Label="City">
            <Control>
                <InputText @bind-Value="server.City" class="form-control"></InputText>
            </Control>
            <ValidationControl>
                <ValidationMessage For="@(() => server.City)"></ValidationMessage>
            </ValidationControl>
        </FieldComponent>

        <FieldComponent Label="Online">
            <Control>
                <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
            </Control>
        </FieldComponent>

        <button type="submit" class="btn btn-primary">Update</button>
        &nbsp;
        <a href="/servers" class="btn btn-primary">Close</a>
    </EditForm>
}


@code {
    [Parameter] //https://learn.microsoft.com/en-us/aspnet/core/blazor/hybrid/routing?view=aspnetcore-9.0&pivots=maui  //https://learn.microsoft.com/en-us/aspnet/core/blazor/fundamentals/routing?view=aspnetcore-10.0#route-constraints
    public int Id { get; set; }

    [SupplyParameterFromForm] //model binding
    private Server? server { get; set; }

    protected override void OnParametersSet() //override
    {
        server ??= ServersRepository.GetServerById(this.Id);
    }
    private void Submit()
    {
        if (server != null)
        {
            ServersRepository.UpdateServer(server.ServerId, server);
        }
        //NavigationManager.NavigateTo("/servers", true);
        NavigationManager.NavigateTo($"/servers/back_from/{this.server?.City}");
    }
}
