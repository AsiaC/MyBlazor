@inject NavigationManager NavigationManager

@if (Server != null)
{
    <tr style="background-color: @GetBackgroundcColor()">
        <td>@Server.Name</td>
        <td>@Server.City</td>
        <td style="color:@(Server.IsOnline ? "green" : "red")">
            @(Server.IsOnline ? "Online" : "Offline")
        </td>
        <td>
            @if (Server.IsOnline)
            {
                Random rand = new Random();
                int randomNumber = rand.Next(1, 100);
                <text>@randomNumber</text>
            }
            else
            {
                <text>N/A</text>
            }
        </td>
        <td>
            @if (Server.IsOnline)
            {
                <button type="button" class="btn btn-outline-danger" onclick="@(() => { Server.IsOnline = false; })">
                    Turn Off</button>
            }
            else
            {
                <button type="button" class="btn btn-outline-success" onclick="@(() => { Server.IsOnline = true; })">
                    Turn On</button>
            }
            &nbsp;
            <a href="/servers/@Server.ServerId" class="btn btn-outline-primary">Edit</a>
        </td>
        <td>
            <EditForm Model="Server"
                      FormName="@($"server-{Server.ServerId}")"
                      OnValidSubmit="@(()=>DeleteServer(Server.ServerId))">
                <button type="submit" class="btn btn-primary">Delete</button>
            </EditForm>
        </td>
    </tr>
}

@code {
    [Parameter]
    public Server? Server { get; set; }

    [CascadingParameter(Name = "SelectedCity")]
    public string? SelectedCity { get; set; }

    private void DeleteServer(int serverId)
    {
        if (serverId > 0)
        {
            ServersRepository.DeleteServer(serverId);
            NavigationManager.NavigateTo("/servers", true);
        }
    }

    private string GetBackgroundcColor()
    {
        if (SelectedCity != null)
        {
            switch (this.SelectedCity)
            {
                case "Toronto": return "#D6EAF8";
                case "Montreal": return "#D5F5E3";
                case "Ottawa": return "#FADBD8";
                case "Calgary": return "#FCF3CF";
                case "Halifax": return "#E8DAEF";
                default: return "white";
            }
        }
        return "white";
    }
}
